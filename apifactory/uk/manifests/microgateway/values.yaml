# Default values for krakend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  image:
    repository: ghcr.io/kl-engineering/subscriptions-microgateway
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: main

  # These variables are used to set the directory which the templating engine
  # resolves the configuration for the krakend.json file
  # Please make sure these are set
  region: "uk"
  environment: "apifactory"

  imagePullSecrets:
  - name: dockerconfigjson-ghcr
  nameOverride: "subscriptions-microgateway"
  fullnameOverride: "subscriptions-microgateway"
# kl-base-microgateway:
#   serviceAccount:
#     # Specifies whether a service account should be created
#     create: true
#     # Annotations to add to the service account
#     annotations: {}
#     # The name of the service account to use.
#     # If not set and create is true, a name is generated using the fullname template
#     name: ""

#   podAnnotations: {}

#   podSecurityContext:
#     {}
#     # fsGroup: 2000

#   securityContext:
#     {}
#     # capabilities:
#     #   drop:
#     #   - ALL
#     # readOnlyRootFilesystem: true
#     # runAsNonRoot: true
#     # runAsUser: 1000

#   service:
#     type: ClusterIP
#     port: 80

#   replicaCount: 1

#   resources:
#     limits:
#       cpu: "1.5"
#       memory: "1Gi"
#     requests:
#       cpu: "1.25"
#       memory: "512Mi"
#     # We usually recommend not to specify default resources and to leave this as a conscious
#     # choice for the user. This also increases chances charts run on environments with little
#     # resources, such as Minikube. If you do want to specify resources, uncomment the following
#     # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#     # limits:
#     #   cpu: 100m
#     #   memory: 128Mi
#     # requests:
#     #   cpu: 100m
#     #   memory: 128Mi

#   autoscaling:
#     enabled: false
#     minReplicas: 1
#     maxReplicas: 5
#     targetCPUUtilizationPercentage: 80
#     # targetMemoryUtilizationPercentage: 80

#   nodeSelector: {}

#   tolerations: []

#   affinity: {}

#   env: []
