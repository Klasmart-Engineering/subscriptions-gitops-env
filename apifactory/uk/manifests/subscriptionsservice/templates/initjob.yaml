apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.appName }}-database-init
  labels:
    app: {{ .Values.appName }}
spec:
  backoffLimit: 4
  activeDeadlineSeconds: 100
  template:
    spec:
      containers:
        - name: init
          image: tmaier/postgresql-client
          command: ["/usr/bin/psql"]
          args:
            - "--host=$(DATABASE_HOST)"
            - "--port=5432"
            - "--username=$(DATABASE_MASTER_USER)"
            - "--dbname=$(DATABASE_DATABASENAME)"
            - "CREATE USER $(USERNAME) WITH PASSWORD $(PASSWORD); CREATE DATABASE $(NAME); GRANT ALL PRIVILEGES ON DATABASE $(NAME) TO $(USERNAME);"
          env:
          - name: DATABASE_DATABASENAME
            valueFrom:
              secretKeyRef:
                name: tf-outputs
                key: db_name
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: tf-outputs
                key: db_master_password
          - name: DATABASE_MASTER_USER
            valueFrom:
              secretKeyRef:
                name: tf-outputs
                key: db_master_usename
          - name: DATABASE_HOST
            valueFrom:
              secretKeyRef:
                name: tf-outputs
                key: db_hostname
          - name: USERNAME
            valueFrom:
              secretKeyRef:
                name: tf-outputs
                key: db_username
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: tf-outputs
                key: db_password
          - name: NAME
            valueFrom:
              secretKeyRef:
                name: tf-outputs
                key: db_logical_name
      restartPolicy: OnFailure
