name: Propagate release candidate

permissions:
  contents: write
  pull-requests: write

on:
  workflow_call:
    inputs:
      base_ref:
        required: true
        type: string
      target_ref:
        required: true
        type: string
      base_env:
        required: true
        type: string
      target_env:
        required: true
        type: string
    secrets:
      github-token:
        required: true

jobs:
  propagate:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0

      - name: Generate changeset
        id: generate-diff
        run: |
          git format-patch ${{ inputs.base_ref }} ${{ inputs.target_ref }} -o /tmp/patches ${{ inputs.base_env }}

          FILES="/tmp/patches/*.patch"
          for f in $FILES 
          do
            git apply -p4 --directory="${{ inputs.target_env }}" -- $f
          done

          git config --global user.name 'gitops-propagate-sync'
          git config --global user.email 'github-action@noreply.github.com'

          BRANCH_NAME=propagate/${{ github.run_id }}-${{ github.run_attempt }}

          git checkout -b $BRANCH_NAME
          git add .
          git commit -m "chore(propagate-sync): propagate version ${{ inputs.target_ref }} in ${{ inputs.base_env }} into ${{ inputs.target_env }}" && git push --set-upstream origin $BRANCH_NAME || touch no-commit

          if [ -f "no-commit" ]; then
            echo "::set-output name=commit-status::no-commit"
          else 
            echo "::set-output name=pr-branch-name::$BRANCH_NAME"
          fi

      - name: Create pull request
        uses: actions/github-script@v6
        if: steps.generate-diff.outputs.commit-status != 'no-commit'
        with:
          github-token: ${{ secrets.github-token }}
          script: |
            const splitGateway = '${{ github.repository }}'.split('/');
            const owner = splitGateway[0];
            const repo = splitGateway[1];
            const head = '${{ steps.generate-diff.outputs.pr-branch-name }}';
            const result = await github.rest.pulls.create({
              title: '[Propagate] from ${{ inputs.base_env }} to ${{ inputs.target_env }}',
              owner,
              repo,
              head,
              base: 'main',
              body: [
                ':bangbang: :robot: This PR is auto-generated',
                '',
                '|         | From | TO |',
                '| ------- | ---| :-------------:|',
                '| Environment | `${{ inputs.base_env }}` | `${{ inputs.target_env }}` |',
                '| Ref | `${{ inputs.base_ref }}` | `${{ inputs.target_ref }}` |',
                '',
                'Please review and merge this when you want to deploy the release.'
              ].join('\n')
            });
            github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: result.data.number,
              labels: ['automated pr', 'release']
            });